name: marp-to-pages
concurrency: marp-to-pages

on:
  push:
    branches: [ main ]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ensure build dir exists
        run: mkdir -p build

      - name: Copy images directory (if exists)
        run: if [[ -d img ]]; then cp -R img build/img; fi

      - name: Copy fonts directory (if exists)
        run: if [[ -d fonts ]]; then cp -R fonts build/fonts; fi

      - name: Marp Build (README)
        uses: docker://marpteam/marp-cli
        with:
          args: README.md -o build/index.html
        env:
          MARP_USER: root:root

      - name: Marp Build (README.pdf)
        uses: docker://marpteam/marp-cli
        with:
          args: README.md --allow-local-files -o build/README.pdf
        env:
          MARP_USER: root:root

      - name: Marp Build (README.pptx)
        uses: docker://marpteam/marp-cli
        with:
          args: README.md --allow-local-files -o build/README.pptx
        env:
          MARP_USER: root:root

      - name: Check if docs folder exists
        id: docs-folder-exists
        run: bash -c "[[ -d list ]] ; echo \"has_docs=\$?\" >> \"$GITHUB_OUTPUT\""

      - name: Marp Build (docs folder, if exists)
        if: steps.docs-folder-exists.outputs.has_docs == '0'
        uses: docker://marpteam/marp-cli
        with:
          args: -I list/ -o build/list/
        env:
          MARP_USER: root:root
      
      - name: Marp Build (list folder to PDF)
        if: steps.docs-folder-exists.outputs.has_docs == '0'
        run: |
          for file in list/*.md; do
            filename=$(basename "$file" .md)
            docker run --rm -v $PWD:/home/marp/app/ -e MARP_USER=root:root marpteam/marp-cli $file --allow-local-files -o build/list/$filename.pdf
          done

      - name: Marp Build (list folder to PPTX)
        if: steps.docs-folder-exists.outputs.has_docs == '0'
        run: |
          for file in list/*.md; do
            filename=$(basename "$file" .md)
            docker run --rm -v $PWD:/home/marp/app/ -e MARP_USER=root:root marpteam/marp-cli $file --allow-local-files -o build/list/$filename.pptx
          done

      - name: Deploy preview
        if: ${{ github.event_name == 'pull_request' }}
        uses: rossjrw/pr-preview-action@v1
        with:
          source-dir: ./build/
          preview-branch: gh-pages
          umbrella-dir: pr-preview

      - name: Deploy production
        if: ${{ github.event_name == 'push' }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: ./build/
          clean-exclude: pr-preview/

